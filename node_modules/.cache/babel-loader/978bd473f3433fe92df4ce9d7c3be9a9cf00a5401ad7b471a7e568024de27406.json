{"ast":null,"code":"import React,{useState}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const GreatestOfThree=()=>{const[num1,setNum1]=useState('');const[num2,setNum2]=useState('');const[num3,setNum3]=useState('');const[result,setResult]=useState(null);const findGreatest=()=>{const n1=parseFloat(num1);const n2=parseFloat(num2);const n3=parseFloat(num3);if(isNaN(n1)||isNaN(n2)||isNaN(n3)){alert('Please enter valid numbers in all fields');return;}let greatest=n1;if(n2>greatest)greatest=n2;if(n3>greatest)greatest=n3;setResult({numbers:[n1,n2,n3],greatest:greatest});};return/*#__PURE__*/_jsxs(\"div\",{className:\"program-card\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"program-title\",children:\"Greatest of 3 Numbers\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"three-inputs\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"input-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"num1\",children:\"Number 1:\"}),/*#__PURE__*/_jsx(\"input\",{id:\"num1\",type:\"number\",value:num1,onChange:e=>setNum1(e.target.value),placeholder:\"Enter first number\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"num2\",children:\"Number 2:\"}),/*#__PURE__*/_jsx(\"input\",{id:\"num2\",type:\"number\",value:num2,onChange:e=>setNum2(e.target.value),placeholder:\"Enter second number\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"num3\",children:\"Number 3:\"}),/*#__PURE__*/_jsx(\"input\",{id:\"num3\",type:\"number\",value:num3,onChange:e=>setNum3(e.target.value),placeholder:\"Enter third number\"})]})]}),/*#__PURE__*/_jsx(\"button\",{className:\"btn\",onClick:findGreatest,children:\"Find Greatest\"}),result&&/*#__PURE__*/_jsxs(\"div\",{className:\"result-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"result-title\",children:\"Result:\"}),/*#__PURE__*/_jsx(\"div\",{className:\"result-content\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"greatest-result\",children:[\"Greatest number among \",result.numbers.join(', '),\" is: \",result.greatest]})})]})]});};export default GreatestOfThree;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","GreatestOfThree","num1","setNum1","num2","setNum2","num3","setNum3","result","setResult","findGreatest","n1","parseFloat","n2","n3","isNaN","alert","greatest","numbers","className","children","htmlFor","id","type","value","onChange","e","target","placeholder","onClick","join"],"sources":["/Users/sjanani/Desktop/School/SEM I/FSD/Assignments/React-Math-Programs/src/components/GreatestOfThree.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst GreatestOfThree = () => {\n  const [num1, setNum1] = useState('');\n  const [num2, setNum2] = useState('');\n  const [num3, setNum3] = useState('');\n  const [result, setResult] = useState(null);\n\n  const findGreatest = () => {\n    const n1 = parseFloat(num1);\n    const n2 = parseFloat(num2);\n    const n3 = parseFloat(num3);\n\n    if (isNaN(n1) || isNaN(n2) || isNaN(n3)) {\n      alert('Please enter valid numbers in all fields');\n      return;\n    }\n\n    let greatest = n1;\n    if (n2 > greatest) greatest = n2;\n    if (n3 > greatest) greatest = n3;\n\n    setResult({\n      numbers: [n1, n2, n3],\n      greatest: greatest\n    });\n  };\n\n  return (\n    <div className=\"program-card\">\n      <h2 className=\"program-title\">Greatest of 3 Numbers</h2>\n      <div className=\"three-inputs\">\n        <div className=\"input-group\">\n          <label htmlFor=\"num1\">Number 1:</label>\n          <input\n            id=\"num1\"\n            type=\"number\"\n            value={num1}\n            onChange={(e) => setNum1(e.target.value)}\n            placeholder=\"Enter first number\"\n          />\n        </div>\n        <div className=\"input-group\">\n          <label htmlFor=\"num2\">Number 2:</label>\n          <input\n            id=\"num2\"\n            type=\"number\"\n            value={num2}\n            onChange={(e) => setNum2(e.target.value)}\n            placeholder=\"Enter second number\"\n          />\n        </div>\n        <div className=\"input-group\">\n          <label htmlFor=\"num3\">Number 3:</label>\n          <input\n            id=\"num3\"\n            type=\"number\"\n            value={num3}\n            onChange={(e) => setNum3(e.target.value)}\n            placeholder=\"Enter third number\"\n          />\n        </div>\n      </div>\n      <button className=\"btn\" onClick={findGreatest}>\n        Find Greatest\n      </button>\n      {result && (\n        <div className=\"result-container\">\n          <div className=\"result-title\">Result:</div>\n          <div className=\"result-content\">\n            <div className=\"greatest-result\">\n              Greatest number among {result.numbers.join(', ')} is: {result.greatest}\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default GreatestOfThree;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}