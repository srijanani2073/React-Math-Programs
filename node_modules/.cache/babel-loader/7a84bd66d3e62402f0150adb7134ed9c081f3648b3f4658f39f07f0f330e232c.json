{"ast":null,"code":"import React,{useState}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const NaturalNumbers=()=>{const[count,setCount]=useState('');const[numbers,setNumbers]=useState([]);const generateNumbers=()=>{const num=parseInt(count);if(num>0&&num<=100){const naturalNums=[];for(let i=1;i<=num;i++){naturalNums.push(i);}setNumbers(naturalNums);}else{alert('Please enter a number between 1 and 100');}};return/*#__PURE__*/_jsxs(\"div\",{className:\"program-card\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"program-title\",children:\"Natural Numbers Generator\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"natural-count\",children:\"Enter count:\"}),/*#__PURE__*/_jsx(\"input\",{id:\"natural-count\",type:\"number\",value:count,onChange:e=>setCount(e.target.value),placeholder:\"Enter a number (1-100)\"})]}),/*#__PURE__*/_jsx(\"button\",{className:\"btn\",onClick:generateNumbers,children:\"Generate Numbers\"}),numbers.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"result-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"result-title\",children:[\"First \",count,\" Natural Numbers:\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"result-content\",children:/*#__PURE__*/_jsx(\"div\",{className:\"natural-numbers\",children:numbers.map(num=>/*#__PURE__*/_jsx(\"span\",{className:\"number-badge\",children:num},num))})})]})]});};export default NaturalNumbers;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","NaturalNumbers","count","setCount","numbers","setNumbers","generateNumbers","num","parseInt","naturalNums","i","push","alert","className","children","htmlFor","id","type","value","onChange","e","target","placeholder","onClick","length","map"],"sources":["/Users/sjanani/Desktop/School/SEM I/FSD/Assignments/React-Math-Programs/src/components/NaturalNumbers.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst NaturalNumbers = () => {\n  const [count, setCount] = useState('');\n  const [numbers, setNumbers] = useState([]);\n\n  const generateNumbers = () => {\n    const num = parseInt(count);\n    if (num > 0 && num <= 100) {\n      const naturalNums = [];\n      for (let i = 1; i <= num; i++) {\n        naturalNums.push(i);\n      }\n      setNumbers(naturalNums);\n    } else {\n      alert('Please enter a number between 1 and 100');\n    }\n  };\n\n  return (\n    <div className=\"program-card\">\n      <h2 className=\"program-title\">Natural Numbers Generator</h2>\n      <div className=\"input-group\">\n        <label htmlFor=\"natural-count\">Enter count:</label>\n        <input\n          id=\"natural-count\"\n          type=\"number\"\n          value={count}\n          onChange={(e) => setCount(e.target.value)}\n          placeholder=\"Enter a number (1-100)\"\n        />\n      </div>\n      <button className=\"btn\" onClick={generateNumbers}>\n        Generate Numbers\n      </button>\n      {numbers.length > 0 && (\n        <div className=\"result-container\">\n          <div className=\"result-title\">First {count} Natural Numbers:</div>\n          <div className=\"result-content\">\n            <div className=\"natural-numbers\">\n              {numbers.map(num => (\n                <span key={num} className=\"number-badge\">{num}</span>\n              ))}\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default NaturalNumbers;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAExC,KAAM,CAAAC,cAAc,CAAGA,CAAA,GAAM,CAC3B,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAGP,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAACQ,OAAO,CAAEC,UAAU,CAAC,CAAGT,QAAQ,CAAC,EAAE,CAAC,CAE1C,KAAM,CAAAU,eAAe,CAAGA,CAAA,GAAM,CAC5B,KAAM,CAAAC,GAAG,CAAGC,QAAQ,CAACN,KAAK,CAAC,CAC3B,GAAIK,GAAG,CAAG,CAAC,EAAIA,GAAG,EAAI,GAAG,CAAE,CACzB,KAAM,CAAAE,WAAW,CAAG,EAAE,CACtB,IAAK,GAAI,CAAAC,CAAC,CAAG,CAAC,CAAEA,CAAC,EAAIH,GAAG,CAAEG,CAAC,EAAE,CAAE,CAC7BD,WAAW,CAACE,IAAI,CAACD,CAAC,CAAC,CACrB,CACAL,UAAU,CAACI,WAAW,CAAC,CACzB,CAAC,IAAM,CACLG,KAAK,CAAC,yCAAyC,CAAC,CAClD,CACF,CAAC,CAED,mBACEZ,KAAA,QAAKa,SAAS,CAAC,cAAc,CAAAC,QAAA,eAC3BhB,IAAA,OAAIe,SAAS,CAAC,eAAe,CAAAC,QAAA,CAAC,2BAAyB,CAAI,CAAC,cAC5Dd,KAAA,QAAKa,SAAS,CAAC,aAAa,CAAAC,QAAA,eAC1BhB,IAAA,UAAOiB,OAAO,CAAC,eAAe,CAAAD,QAAA,CAAC,cAAY,CAAO,CAAC,cACnDhB,IAAA,UACEkB,EAAE,CAAC,eAAe,CAClBC,IAAI,CAAC,QAAQ,CACbC,KAAK,CAAEhB,KAAM,CACbiB,QAAQ,CAAGC,CAAC,EAAKjB,QAAQ,CAACiB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE,CAC1CI,WAAW,CAAC,wBAAwB,CACrC,CAAC,EACC,CAAC,cACNxB,IAAA,WAAQe,SAAS,CAAC,KAAK,CAACU,OAAO,CAAEjB,eAAgB,CAAAQ,QAAA,CAAC,kBAElD,CAAQ,CAAC,CACRV,OAAO,CAACoB,MAAM,CAAG,CAAC,eACjBxB,KAAA,QAAKa,SAAS,CAAC,kBAAkB,CAAAC,QAAA,eAC/Bd,KAAA,QAAKa,SAAS,CAAC,cAAc,CAAAC,QAAA,EAAC,QAAM,CAACZ,KAAK,CAAC,mBAAiB,EAAK,CAAC,cAClEJ,IAAA,QAAKe,SAAS,CAAC,gBAAgB,CAAAC,QAAA,cAC7BhB,IAAA,QAAKe,SAAS,CAAC,iBAAiB,CAAAC,QAAA,CAC7BV,OAAO,CAACqB,GAAG,CAAClB,GAAG,eACdT,IAAA,SAAgBe,SAAS,CAAC,cAAc,CAAAC,QAAA,CAAEP,GAAG,EAAlCA,GAAyC,CACrD,CAAC,CACC,CAAC,CACH,CAAC,EACH,CACN,EACE,CAAC,CAEV,CAAC,CAED,cAAe,CAAAN,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}