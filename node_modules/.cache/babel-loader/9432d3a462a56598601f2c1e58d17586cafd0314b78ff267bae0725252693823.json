{"ast":null,"code":"var _jsxFileName = \"/Users/sjanani/Desktop/School/SEM I/FSD/Assignments/React-Math-Programs/src/components/GreatestOfThree.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GreatestOfThree = () => {\n  _s();\n  const [num1, setNum1] = useState('');\n  const [num2, setNum2] = useState('');\n  const [num3, setNum3] = useState('');\n  const [result, setResult] = useState(null);\n  const findGreatest = () => {\n    const n1 = parseFloat(num1);\n    const n2 = parseFloat(num2);\n    const n3 = parseFloat(num3);\n    if (isNaN(n1) || isNaN(n2) || isNaN(n3)) {\n      alert('Please enter valid numbers in all fields');\n      return;\n    }\n    let greatest = n1;\n    if (n2 > greatest) greatest = n2;\n    if (n3 > greatest) greatest = n3;\n    setResult({\n      numbers: [n1, n2, n3],\n      greatest: greatest\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"program-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"program-title\",\n      children: \"Greatest of 3 Numbers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"three-inputs\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"num1\",\n          children: \"Number 1:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"num1\",\n          type: \"number\",\n          value: num1,\n          onChange: e => setNum1(e.target.value),\n          placeholder: \"Enter first number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"num2\",\n          children: \"Number 2:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"num2\",\n          type: \"number\",\n          value: num2,\n          onChange: e => setNum2(e.target.value),\n          placeholder: \"Enter second number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"num3\",\n          children: \"Number 3:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"num3\",\n          type: \"number\",\n          value: num3,\n          onChange: e => setNum3(e.target.value),\n          placeholder: \"Enter third number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn\",\n      onClick: findGreatest,\n      children: \"Find Greatest\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), result && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result-title\",\n        children: \"Result:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result-content\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"greatest-result\",\n          children: [\"Greatest number among \", result.numbers.join(', '), \" is: \", result.greatest]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(GreatestOfThree, \"wRSGetvYIpPBYUAqllZzEBCVipM=\");\n_c = GreatestOfThree;\nexport default GreatestOfThree;\nvar _c;\n$RefreshReg$(_c, \"GreatestOfThree\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","GreatestOfThree","_s","num1","setNum1","num2","setNum2","num3","setNum3","result","setResult","findGreatest","n1","parseFloat","n2","n3","isNaN","alert","greatest","numbers","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","type","value","onChange","e","target","placeholder","onClick","join","_c","$RefreshReg$"],"sources":["/Users/sjanani/Desktop/School/SEM I/FSD/Assignments/React-Math-Programs/src/components/GreatestOfThree.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst GreatestOfThree = () => {\n  const [num1, setNum1] = useState('');\n  const [num2, setNum2] = useState('');\n  const [num3, setNum3] = useState('');\n  const [result, setResult] = useState(null);\n\n  const findGreatest = () => {\n    const n1 = parseFloat(num1);\n    const n2 = parseFloat(num2);\n    const n3 = parseFloat(num3);\n\n    if (isNaN(n1) || isNaN(n2) || isNaN(n3)) {\n      alert('Please enter valid numbers in all fields');\n      return;\n    }\n\n    let greatest = n1;\n    if (n2 > greatest) greatest = n2;\n    if (n3 > greatest) greatest = n3;\n\n    setResult({\n      numbers: [n1, n2, n3],\n      greatest: greatest\n    });\n  };\n\n  return (\n    <div className=\"program-card\">\n      <h2 className=\"program-title\">Greatest of 3 Numbers</h2>\n      <div className=\"three-inputs\">\n        <div className=\"input-group\">\n          <label htmlFor=\"num1\">Number 1:</label>\n          <input\n            id=\"num1\"\n            type=\"number\"\n            value={num1}\n            onChange={(e) => setNum1(e.target.value)}\n            placeholder=\"Enter first number\"\n          />\n        </div>\n        <div className=\"input-group\">\n          <label htmlFor=\"num2\">Number 2:</label>\n          <input\n            id=\"num2\"\n            type=\"number\"\n            value={num2}\n            onChange={(e) => setNum2(e.target.value)}\n            placeholder=\"Enter second number\"\n          />\n        </div>\n        <div className=\"input-group\">\n          <label htmlFor=\"num3\">Number 3:</label>\n          <input\n            id=\"num3\"\n            type=\"number\"\n            value={num3}\n            onChange={(e) => setNum3(e.target.value)}\n            placeholder=\"Enter third number\"\n          />\n        </div>\n      </div>\n      <button className=\"btn\" onClick={findGreatest}>\n        Find Greatest\n      </button>\n      {result && (\n        <div className=\"result-container\">\n          <div className=\"result-title\">Result:</div>\n          <div className=\"result-content\">\n            <div className=\"greatest-result\">\n              Greatest number among {result.numbers.join(', ')} is: {result.greatest}\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default GreatestOfThree;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}