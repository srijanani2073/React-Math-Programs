{"ast":null,"code":"import React,{useState}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const FactorialCalculator=()=>{const[number,setNumber]=useState('');const[result,setResult]=useState(null);const calculateFactorial=()=>{const num=parseInt(number);if(isNaN(num)||num<0){alert('Please enter a valid non-negative number');return;}if(num>20){alert('Please enter a number less than or equal to 20 to avoid overflow');return;}let factorial=1;let steps=[];for(let i=1;i<=num;i++){factorial*=i;steps.push(i);}setResult({number:num,factorial:factorial,steps:steps.length>0?steps.join(' × ')+\" = \".concat(factorial):'1 = 1'});};return/*#__PURE__*/_jsxs(\"div\",{className:\"program-card\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"program-title\",children:\"Factorial Calculator\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"factorial-number\",children:\"Enter number:\"}),/*#__PURE__*/_jsx(\"input\",{id:\"factorial-number\",type:\"number\",value:number,onChange:e=>setNumber(e.target.value),placeholder:\"Enter a number (0-20)\"})]}),/*#__PURE__*/_jsx(\"button\",{className:\"btn\",onClick:calculateFactorial,children:\"Calculate Factorial\"}),result&&/*#__PURE__*/_jsxs(\"div\",{className:\"result-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"result-title\",children:\"Result:\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"result-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"factorial-result\",children:[result.number,\"! = \",result.factorial]}),/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:'10px',fontSize:'14px'},children:[\"Calculation: \",result.steps]})]})]})]});};export default FactorialCalculator;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","FactorialCalculator","number","setNumber","result","setResult","calculateFactorial","num","parseInt","isNaN","alert","factorial","steps","i","push","length","join","concat","className","children","htmlFor","id","type","value","onChange","e","target","placeholder","onClick","style","marginTop","fontSize"],"sources":["/Users/sjanani/Desktop/School/SEM I/FSD/Assignments/React-Math-Programs/src/components/FactorialCalculator.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst FactorialCalculator = () => {\n  const [number, setNumber] = useState('');\n  const [result, setResult] = useState(null);\n\n  const calculateFactorial = () => {\n    const num = parseInt(number);\n    if (isNaN(num) || num < 0) {\n      alert('Please enter a valid non-negative number');\n      return;\n    }\n    \n    if (num > 20) {\n      alert('Please enter a number less than or equal to 20 to avoid overflow');\n      return;\n    }\n\n    let factorial = 1;\n    let steps = [];\n    \n    for (let i = 1; i <= num; i++) {\n      factorial *= i;\n      steps.push(i);\n    }\n\n    setResult({\n      number: num,\n      factorial: factorial,\n      steps: steps.length > 0 ? steps.join(' × ') + ` = ${factorial}` : '1 = 1'\n    });\n  };\n\n  return (\n    <div className=\"program-card\">\n      <h2 className=\"program-title\">Factorial Calculator</h2>\n      <div className=\"input-group\">\n        <label htmlFor=\"factorial-number\">Enter number:</label>\n        <input\n          id=\"factorial-number\"\n          type=\"number\"\n          value={number}\n          onChange={(e) => setNumber(e.target.value)}\n          placeholder=\"Enter a number (0-20)\"\n        />\n      </div>\n      <button className=\"btn\" onClick={calculateFactorial}>\n        Calculate Factorial\n      </button>\n      {result && (\n        <div className=\"result-container\">\n          <div className=\"result-title\">Result:</div>\n          <div className=\"result-content\">\n            <div className=\"factorial-result\">\n              {result.number}! = {result.factorial}\n            </div>\n            <div style={{ marginTop: '10px', fontSize: '14px' }}>\n              Calculation: {result.steps}\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default FactorialCalculator;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAExC,KAAM,CAAAC,mBAAmB,CAAGA,CAAA,GAAM,CAChC,KAAM,CAACC,MAAM,CAAEC,SAAS,CAAC,CAAGP,QAAQ,CAAC,EAAE,CAAC,CACxC,KAAM,CAACQ,MAAM,CAAEC,SAAS,CAAC,CAAGT,QAAQ,CAAC,IAAI,CAAC,CAE1C,KAAM,CAAAU,kBAAkB,CAAGA,CAAA,GAAM,CAC/B,KAAM,CAAAC,GAAG,CAAGC,QAAQ,CAACN,MAAM,CAAC,CAC5B,GAAIO,KAAK,CAACF,GAAG,CAAC,EAAIA,GAAG,CAAG,CAAC,CAAE,CACzBG,KAAK,CAAC,0CAA0C,CAAC,CACjD,OACF,CAEA,GAAIH,GAAG,CAAG,EAAE,CAAE,CACZG,KAAK,CAAC,kEAAkE,CAAC,CACzE,OACF,CAEA,GAAI,CAAAC,SAAS,CAAG,CAAC,CACjB,GAAI,CAAAC,KAAK,CAAG,EAAE,CAEd,IAAK,GAAI,CAAAC,CAAC,CAAG,CAAC,CAAEA,CAAC,EAAIN,GAAG,CAAEM,CAAC,EAAE,CAAE,CAC7BF,SAAS,EAAIE,CAAC,CACdD,KAAK,CAACE,IAAI,CAACD,CAAC,CAAC,CACf,CAEAR,SAAS,CAAC,CACRH,MAAM,CAAEK,GAAG,CACXI,SAAS,CAAEA,SAAS,CACpBC,KAAK,CAAEA,KAAK,CAACG,MAAM,CAAG,CAAC,CAAGH,KAAK,CAACI,IAAI,CAAC,KAAK,CAAC,OAAAC,MAAA,CAASN,SAAS,CAAE,CAAG,OACpE,CAAC,CAAC,CACJ,CAAC,CAED,mBACEX,KAAA,QAAKkB,SAAS,CAAC,cAAc,CAAAC,QAAA,eAC3BrB,IAAA,OAAIoB,SAAS,CAAC,eAAe,CAAAC,QAAA,CAAC,sBAAoB,CAAI,CAAC,cACvDnB,KAAA,QAAKkB,SAAS,CAAC,aAAa,CAAAC,QAAA,eAC1BrB,IAAA,UAAOsB,OAAO,CAAC,kBAAkB,CAAAD,QAAA,CAAC,eAAa,CAAO,CAAC,cACvDrB,IAAA,UACEuB,EAAE,CAAC,kBAAkB,CACrBC,IAAI,CAAC,QAAQ,CACbC,KAAK,CAAErB,MAAO,CACdsB,QAAQ,CAAGC,CAAC,EAAKtB,SAAS,CAACsB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE,CAC3CI,WAAW,CAAC,uBAAuB,CACpC,CAAC,EACC,CAAC,cACN7B,IAAA,WAAQoB,SAAS,CAAC,KAAK,CAACU,OAAO,CAAEtB,kBAAmB,CAAAa,QAAA,CAAC,qBAErD,CAAQ,CAAC,CACRf,MAAM,eACLJ,KAAA,QAAKkB,SAAS,CAAC,kBAAkB,CAAAC,QAAA,eAC/BrB,IAAA,QAAKoB,SAAS,CAAC,cAAc,CAAAC,QAAA,CAAC,SAAO,CAAK,CAAC,cAC3CnB,KAAA,QAAKkB,SAAS,CAAC,gBAAgB,CAAAC,QAAA,eAC7BnB,KAAA,QAAKkB,SAAS,CAAC,kBAAkB,CAAAC,QAAA,EAC9Bf,MAAM,CAACF,MAAM,CAAC,MAAI,CAACE,MAAM,CAACO,SAAS,EACjC,CAAC,cACNX,KAAA,QAAK6B,KAAK,CAAE,CAAEC,SAAS,CAAE,MAAM,CAAEC,QAAQ,CAAE,MAAO,CAAE,CAAAZ,QAAA,EAAC,eACtC,CAACf,MAAM,CAACQ,KAAK,EACvB,CAAC,EACH,CAAC,EACH,CACN,EACE,CAAC,CAEV,CAAC,CAED,cAAe,CAAAX,mBAAmB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}