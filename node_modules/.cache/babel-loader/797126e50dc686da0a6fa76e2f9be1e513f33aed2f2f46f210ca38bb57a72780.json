{"ast":null,"code":"var _jsxFileName = \"/Users/sjanani/Desktop/School/SEM I/FSD/Assignments/React-Math-Programs/src/components/NaturalNumbers.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NaturalNumbers = () => {\n  _s();\n  const [count, setCount] = useState('');\n  const [numbers, setNumbers] = useState([]);\n  const generateNumbers = () => {\n    const num = parseInt(count);\n    if (num > 0 && num <= 100) {\n      const naturalNums = [];\n      for (let i = 1; i <= num; i++) {\n        naturalNums.push(i);\n      }\n      setNumbers(naturalNums);\n    } else {\n      alert('Please enter a number between 1 and 100');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"program-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"program-title\",\n      children: \"Natural Numbers Generator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"natural-count\",\n        children: \"Enter count:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"natural-count\",\n        type: \"number\",\n        value: count,\n        onChange: e => setCount(e.target.value),\n        placeholder: \"Enter a number (1-100)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn\",\n      onClick: generateNumbers,\n      children: \"Generate Numbers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), numbers.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result-title\",\n        children: [\"First \", count, \" Natural Numbers:\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result-content\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"natural-numbers\",\n          children: numbers.map(num => /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"number-badge\",\n            children: num\n          }, num, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(NaturalNumbers, \"nffZYKsMFIHlKrcOKCZPRMGlC0U=\");\n_c = NaturalNumbers;\nexport default NaturalNumbers;\nvar _c;\n$RefreshReg$(_c, \"NaturalNumbers\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","NaturalNumbers","_s","count","setCount","numbers","setNumbers","generateNumbers","num","parseInt","naturalNums","i","push","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","type","value","onChange","e","target","placeholder","onClick","length","map","_c","$RefreshReg$"],"sources":["/Users/sjanani/Desktop/School/SEM I/FSD/Assignments/React-Math-Programs/src/components/NaturalNumbers.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst NaturalNumbers = () => {\n  const [count, setCount] = useState('');\n  const [numbers, setNumbers] = useState([]);\n\n  const generateNumbers = () => {\n    const num = parseInt(count);\n    if (num > 0 && num <= 100) {\n      const naturalNums = [];\n      for (let i = 1; i <= num; i++) {\n        naturalNums.push(i);\n      }\n      setNumbers(naturalNums);\n    } else {\n      alert('Please enter a number between 1 and 100');\n    }\n  };\n\n  return (\n    <div className=\"program-card\">\n      <h2 className=\"program-title\">Natural Numbers Generator</h2>\n      <div className=\"input-group\">\n        <label htmlFor=\"natural-count\">Enter count:</label>\n        <input\n          id=\"natural-count\"\n          type=\"number\"\n          value={count}\n          onChange={(e) => setCount(e.target.value)}\n          placeholder=\"Enter a number (1-100)\"\n        />\n      </div>\n      <button className=\"btn\" onClick={generateNumbers}>\n        Generate Numbers\n      </button>\n      {numbers.length > 0 && (\n        <div className=\"result-container\">\n          <div className=\"result-title\">First {count} Natural Numbers:</div>\n          <div className=\"result-content\">\n            <div className=\"natural-numbers\">\n              {numbers.map(num => (\n                <span key={num} className=\"number-badge\">{num}</span>\n              ))}\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default NaturalNumbers;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}