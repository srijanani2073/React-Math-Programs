{"ast":null,"code":"var _jsxFileName = \"/Users/sjanani/Desktop/School/SEM I/FSD/Assignments/React-Math-Programs/src/components/ArmstrongChecker.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ArmstrongChecker = () => {\n  _s();\n  const [number, setNumber] = useState('');\n  const [result, setResult] = useState(null);\n  const checkArmstrong = () => {\n    const num = parseInt(number);\n    if (isNaN(num) || num < 0) {\n      alert('Please enter a valid positive number');\n      return;\n    }\n    const str = num.toString();\n    const numDigits = str.length;\n    let sum = 0;\n    for (let digit of str) {\n      sum += Math.pow(parseInt(digit), numDigits);\n    }\n    const isArmstrong = sum === num;\n    setResult({\n      number: num,\n      isArmstrong: isArmstrong,\n      calculation: str.split('').map(d => `${d}^${numDigits}`).join(' + ') + ` = ${sum}`\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"program-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"program-title\",\n      children: \"Armstrong Number Checker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"armstrong-number\",\n        children: \"Enter number:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"armstrong-number\",\n        type: \"number\",\n        value: number,\n        onChange: e => setNumber(e.target.value),\n        placeholder: \"Enter a number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn\",\n      onClick: checkArmstrong,\n      children: \"Check Armstrong\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), result && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result-title\",\n        children: \"Result:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `armstrong-result ${result.isArmstrong ? 'armstrong-true' : 'armstrong-false'}`,\n          children: [result.number, \" is \", result.isArmstrong ? '' : 'NOT ', \"an Armstrong number\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: '10px',\n            fontSize: '14px'\n          },\n          children: [\"Calculation: \", result.calculation]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(ArmstrongChecker, \"nU54mxKXZ8UeorVE2SYLnHgNeSk=\");\n_c = ArmstrongChecker;\nexport default ArmstrongChecker;\nvar _c;\n$RefreshReg$(_c, \"ArmstrongChecker\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ArmstrongChecker","_s","number","setNumber","result","setResult","checkArmstrong","num","parseInt","isNaN","alert","str","toString","numDigits","length","sum","digit","Math","pow","isArmstrong","calculation","split","map","d","join","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","type","value","onChange","e","target","placeholder","onClick","style","marginTop","fontSize","_c","$RefreshReg$"],"sources":["/Users/sjanani/Desktop/School/SEM I/FSD/Assignments/React-Math-Programs/src/components/ArmstrongChecker.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst ArmstrongChecker = () => {\n  const [number, setNumber] = useState('');\n  const [result, setResult] = useState(null);\n\n  const checkArmstrong = () => {\n    const num = parseInt(number);\n    if (isNaN(num) || num < 0) {\n      alert('Please enter a valid positive number');\n      return;\n    }\n\n    const str = num.toString();\n    const numDigits = str.length;\n    let sum = 0;\n\n    for (let digit of str) {\n      sum += Math.pow(parseInt(digit), numDigits);\n    }\n\n    const isArmstrong = sum === num;\n    setResult({\n      number: num,\n      isArmstrong: isArmstrong,\n      calculation: str.split('').map(d => `${d}^${numDigits}`).join(' + ') + ` = ${sum}`\n    });\n  };\n\n  return (\n    <div className=\"program-card\">\n      <h2 className=\"program-title\">Armstrong Number Checker</h2>\n      <div className=\"input-group\">\n        <label htmlFor=\"armstrong-number\">Enter number:</label>\n        <input\n          id=\"armstrong-number\"\n          type=\"number\"\n          value={number}\n          onChange={(e) => setNumber(e.target.value)}\n          placeholder=\"Enter a number\"\n        />\n      </div>\n      <button className=\"btn\" onClick={checkArmstrong}>\n        Check Armstrong\n      </button>\n      {result && (\n        <div className=\"result-container\">\n          <div className=\"result-title\">Result:</div>\n          <div className=\"result-content\">\n            <div className={`armstrong-result ${result.isArmstrong ? 'armstrong-true' : 'armstrong-false'}`}>\n              {result.number} is {result.isArmstrong ? '' : 'NOT '}an Armstrong number\n            </div>\n            <div style={{ marginTop: '10px', fontSize: '14px' }}>\n              Calculation: {result.calculation}\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ArmstrongChecker;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}